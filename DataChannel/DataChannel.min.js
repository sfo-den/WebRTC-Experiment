"use strict";!function(){function DataConnector(root,config){function newPrivateSocket(_config){function initPeer(offerSDP){"one-to-one"===root.direction&&window.isFirstConnectionOpened||(offerSDP?(peerConfig.offerSDP=offerSDP,peerConfig.onAnswerSDP=sendsdp):peerConfig.onOfferSDP=sendsdp,peer=new RTCPeerConnection(peerConfig))}function onChannelOpened(channel){channel.peer=peer.peer,rtcDataChannels.push(channel),config.onopen(_config.userid,channel),"many-to-many"===root.direction&&isbroadcaster&&channels.split("--").length>3&&defaultSocket&&defaultSocket.send({newParticipant:socket.channel,userToken:self.userToken}),window.isFirstConnectionOpened=gotstream=!0}function sendsdp(sdp){sdp=JSON.stringify(sdp);var part=parseInt(sdp.length/3),firstPart=sdp.slice(0,part),secondPart=sdp.slice(part,sdp.length-1),thirdPart="";sdp.length>part+part&&(secondPart=sdp.slice(part,part+part),thirdPart=sdp.slice(part+part,sdp.length)),socket.send({userToken:self.userToken,firstPart:firstPart}),socket.send({userToken:self.userToken,secondPart:secondPart}),socket.send({userToken:self.userToken,thirdPart:thirdPart})}function socketResponse(response){response.userToken!==self.userToken&&((response.firstPart||response.secondPart||response.thirdPart)&&(response.firstPart&&(_config.userid=response.userToken,inner.firstPart=response.firstPart,inner.secondPart&&inner.thirdPart&&selfInvoker()),response.secondPart&&(inner.secondPart=response.secondPart,inner.firstPart&&inner.thirdPart&&selfInvoker()),response.thirdPart&&(inner.thirdPart=response.thirdPart,inner.firstPart&&inner.secondPart&&selfInvoker())),response.candidate&&!gotstream&&peer&&(peer.addICE({sdpMLineIndex:response.candidate.sdpMLineIndex,candidate:JSON.parse(response.candidate.candidate)}),console.debug("ice candidate",response.candidate.candidate)),response.left&&(peer&&peer.peer&&(peer.peer.close(),peer.peer=null),response.closeEntireSession?leaveChannels():socket&&(socket.send({left:!0,userToken:self.userToken}),socket=null),root.onleave(response.userToken)),response.playRoleOfBroadcaster&&setTimeout(function(){self.roomToken=response.roomToken,root.open(self.roomToken),self.sockets=swap(self.sockets)},600))}function selfInvoker(){invokedOnce||(invokedOnce=!0,inner.sdp=JSON.parse(inner.firstPart+inner.secondPart+inner.thirdPart),isofferer?peer.addAnswerSDP(inner.sdp):initPeer(inner.sdp),console.debug("sdp",inner.sdp.sdp))}var socketConfig={channel:_config.channel,onmessage:socketResponse,onopen:function(){isofferer&&!peer&&initPeer(),_config.socketIndex=socket.index=self.sockets.length,self.socketObjects[socketConfig.channel]=socket,self.sockets[_config.socketIndex]=socket}};socketConfig.callback=function(_socket){socket=_socket,socketConfig.onopen()};var gotstream,peer,socket=root.openSignalingChannel(socketConfig),isofferer=_config.isofferer,inner={},peerConfig={onICE:function(candidate){return socket?void socket.send({userToken:self.userToken,candidate:{sdpMLineIndex:candidate.sdpMLineIndex,candidate:JSON.stringify(candidate.candidate)}}):setTimeout(function(){peerConfig.onICE(candidate)},2e3)},onopen:onChannelOpened,onmessage:function(event){config.onmessage(event.data,_config.userid)},onclose:config.onclose,onerror:root.onerror,preferSCTP:root.preferSCTP},invokedOnce=!1}function onNewParticipant(channel){if(channel&&-1===channels.indexOf(channel)&&channel!==self.userToken){channels+=channel+"--";var newChannel=uniqueToken();newPrivateSocket({channel:newChannel,closeSocket:!0}),defaultSocket&&defaultSocket.send({participant:!0,userToken:self.userToken,joinUser:channel,channel:newChannel})}}function uniqueToken(){return(Math.round(60535*Math.random())+5e6).toString()}function leaveChannels(channel){var socket,alert={left:!0,userToken:self.userToken};if(isbroadcaster&&(root.autoCloseEntireSession?alert.closeEntireSession=!0:self.sockets[0].send({playRoleOfBroadcaster:!0,userToken:self.userToken,roomToken:self.roomToken})),!channel){for(var sockets=self.sockets,length=sockets.length,i=0;length>i;i++)socket=sockets[i],socket&&(socket.send(alert),self.socketObjects[socket.channel]&&delete self.socketObjects[socket.channel],delete sockets[i]);that.left=!0}channel&&(socket=self.socketObjects[channel],socket&&(socket.send(alert),self.sockets[socket.index]&&delete self.sockets[socket.index],delete self.socketObjects[channel])),self.sockets=swap(self.sockets)}var self={},that=this;self.userToken=(root.userid=root.userid||uniqueToken()).toString(),self.sockets=[],self.socketObjects={};var channels="--",isbroadcaster=!1,isGetNewRoom=!0,rtcDataChannels=[];window.addEventListener("beforeunload",function(){leaveChannels()},!1),window.addEventListener("keydown",function(e){116===e.keyCode&&leaveChannels()},!1);var defaultSocket=root.openSignalingChannel({onmessage:function(response){response.userToken!==self.userToken&&(isGetNewRoom&&response.roomToken&&response.broadcaster&&config.ondatachannel(response),response.newParticipant&&onNewParticipant(response.newParticipant),response.userToken&&response.joinUser===self.userToken&&response.participant&&-1===channels.indexOf(response.userToken)&&(channels+=response.userToken+"--",console.debug("Data connection is being opened between you and",response.userToken||response.channel),newPrivateSocket({isofferer:!0,channel:response.channel||response.userToken,closeSocket:!0})))},callback:function(socket){defaultSocket=socket}});return{createRoom:function(roomToken){self.roomToken=(roomToken||uniqueToken()).toString(),isbroadcaster=!0,isGetNewRoom=!1,function transmit(){defaultSocket&&defaultSocket.send({roomToken:self.roomToken,broadcaster:self.userToken}),root.transmitRoomOnce||that.leaving||("one-to-one"===root.direction?window.isFirstConnectionOpened||setTimeout(transmit,3e3):setTimeout(transmit,3e3))}()},joinRoom:function(_config){self.roomToken=_config.roomToken,isGetNewRoom=!1,newPrivateSocket({channel:self.userToken}),defaultSocket.send({participant:!0,userToken:self.userToken,joinUser:_config.joinUser})},send:function(message,_channel){var data,_channels=rtcDataChannels,length=_channels.length;if(length){if(data=JSON.stringify(message),_channel)return void("open"===_channel.readyState&&_channel.send(data));for(var i=0;length>i;i++)"open"===_channels[i].readyState&&_channels[i].send(data)}},leave:function(userid,autoCloseEntireSession){autoCloseEntireSession&&(root.autoCloseEntireSession=!0),leaveChannels(userid),userid||(self.joinedARoom=isbroadcaster=!1,isGetNewRoom=!0)}}}function getRandomString(){return(Math.random()*(new Date).getTime()).toString(36).replace(/\./g,"-")}function swap(arr){for(var swapped=[],length=arr.length,i=0;length>i;i++)arr[i]&&swapped.push(arr[i]);return swapped}function listenEventHandler(eventName,eventHandler){window.removeEventListener(eventName,eventHandler),window.addEventListener(eventName,eventHandler,!1)}function loadIceFrame(callback,skip){if(!loadedIceFrame){if(!skip)return loadIceFrame(callback,!0);loadedIceFrame=!0;var iframe=document.createElement("iframe");iframe.onload=function(){function iFrameLoaderCallback(event){event.data&&event.data.iceServers&&(callback(event.data.iceServers),window.removeEventListener("message",iFrameLoaderCallback))}iframe.isLoaded=!0,listenEventHandler("message",iFrameLoaderCallback),iframe.contentWindow.postMessage("get-ice-servers","*")},iframe.src="https://cdn.webrtc-experiment.com/getIceServers/",iframe.style.display="none",(document.body||document.documentElement).appendChild(iframe)}}function RTCPeerConnection(options){function onicecandidate(event){event.candidate&&peerConnection&&options.onICE&&options.onICE(event.candidate)}function onSdpError(e){var message=JSON.stringify(e,null,"	");-1!==message.indexOf("RTP/SAVPF Expects at least 4 fields")&&(message="It seems that you are trying to interop RTP-datachannels with SCTP. It is not supported!"),console.error("onSdpError:",message)}function onSdpSuccess(){}function createOffer(){options.onOfferSDP&&peerConnection.createOffer(function(sessionDescription){peerConnection.setLocalDescription(sessionDescription),options.onOfferSDP(sessionDescription)},onSdpError,constraints)}function createAnswer(){options.onAnswerSDP&&(options.offerSDP=new SessionDescription(options.offerSDP),peerConnection.setRemoteDescription(options.offerSDP,onSdpSuccess,onSdpError),peerConnection.createAnswer(function(sessionDescription){peerConnection.setLocalDescription(sessionDescription),options.onAnswerSDP(sessionDescription)},onSdpError,constraints))}function openOffererChannel(){(!moz||options.onOfferSDP)&&(moz||options.onOfferSDP)&&(_openOffererChannel(),moz&&createOffer())}function _openOffererChannel(){var dataChannelDict={};console.debug("dataChannelDict",dataChannelDict),channel=peerConnection.createDataChannel("channel",dataChannelDict),setChannelEvents()}function setChannelEvents(){channel.onmessage=options.onmessage,channel.onopen=function(){options.onopen(channel)},channel.onclose=options.onclose,channel.onerror=options.onerror}function openAnswererChannel(){peerConnection.ondatachannel=function(event){channel=event.channel,setChannelEvents()},moz&&createAnswer()}var w=window,PeerConnection=w.mozRTCPeerConnection||w.webkitRTCPeerConnection,SessionDescription=w.mozRTCSessionDescription||w.RTCSessionDescription,IceCandidate=w.mozRTCIceCandidate||w.RTCIceCandidate,iceServers=window.iceServers||[];iceServers.push({url:"stun:stun.l.google.com:19302"}),iceServers.push({url:"stun:stun.anyfirewall.com:3478"}),iceServers.push({url:"turn:turn.bistri.com:80",credential:"homeo",username:"homeo"}),iceServers.push({url:"turn:turn.anyfirewall.com:443?transport=tcp",credential:"webrtc",username:"webrtc"}),iceServers={iceServers:iceServers};var optional={optional:[]};navigator.onLine||(iceServers=null,console.warn("No internet connection detected. No STUN/TURN server is used to make sure local/host candidates are used for peers connection."));var peerConnection=new PeerConnection(iceServers,optional);openOffererChannel(),peerConnection.onicecandidate=onicecandidate;var constraints=options.constraints||{optional:[],mandatory:{OfferToReceiveAudio:!1,OfferToReceiveVideo:!1}};moz||(createOffer(),createAnswer());var channel;return options.onAnswerSDP&&moz&&options.onmessage&&openAnswererChannel(),moz||options.onOfferSDP||openAnswererChannel(),{addAnswerSDP:function(sdp){sdp=new SessionDescription(sdp),peerConnection.setRemoteDescription(sdp,onSdpSuccess,onSdpError)},addICE:function(candidate){peerConnection.addIceCandidate(new IceCandidate({sdpMLineIndex:candidate.sdpMLineIndex,candidate:candidate.candidate}))},peer:peerConnection,channel:channel,sendData:function(message){channel&&channel.send(message)}}}function FileReceiver(root){function receive(data){var uuid=data.uuid;if("undefined"!=typeof data.packets&&(numberOfPackets[uuid]=packets[uuid]=parseInt(data.packets)),root.onFileProgress&&root.onFileProgress({remaining:packets[uuid]--,length:numberOfPackets[uuid],received:numberOfPackets[uuid]-packets[uuid],maxChunks:numberOfPackets[uuid],uuid:uuid,currentPosition:numberOfPackets[uuid]-packets[uuid]},uuid),content[uuid]||(content[uuid]=[]),content[uuid].push(data.message),data.last){var dataURL=content[uuid].join("");FileConverter.DataURLToBlob(dataURL,data.fileType,function(blob){blob.uuid=uuid,blob.name=data.name,blob.extra=data.extra||{},blob.url=(window.URL||window.webkitURL).createObjectURL(blob),root.autoSaveToDisk&&FileSaver.SaveToDisk(blob.url,data.name),root.onFileReceived&&root.onFileReceived(blob),delete content[uuid]})}}var content={},packets={},numberOfPackets={};return{receive:receive}}function SocketConnector(_channel,config){var socket=config.openSignalingChannel({channel:_channel,onopen:config.onopen,onmessage:config.onmessage,callback:function(_socket){socket=_socket}});return{send:function(message){socket&&socket.send({userid:userid,message:message})}}}function TextReceiver(){function receive(data,onmessage,userid){var uuid=data.uuid;if(content[uuid]||(content[uuid]=[]),content[uuid].push(data.message),data.last){var message=content[uuid].join("");data.isobject&&(message=JSON.parse(message));var receivingTime=(new Date).getTime(),latency=receivingTime-data.sendingTime;onmessage(message,userid,latency),delete content[uuid]}}var content={};return{receive:receive}}window.DataChannel=function(channel,extras){function prepareInit(callback){for(var extra in extras)self[extra]=extras[extra];if(self.direction=self.direction||"many-to-many",self.userid&&(window.userid=self.userid),self.openSignalingChannel)callback();else if("undefined"==typeof self.transmitRoomOnce&&(self.transmitRoomOnce=!0),self.openSignalingChannel=function(config){config=config||{},channel=config.channel||self.channel||"default-channel";var socket=new window.Firebase("https://"+(self.firebase||"webrtc-experiment")+".firebaseIO.com/"+channel);return socket.channel=channel,socket.on("child_added",function(data){config.onmessage(data.val())}),socket.send=function(data){this.push(data)},self.socket||(self.socket=socket),(channel!==self.channel||self.isInitiator&&channel===self.channel)&&socket.onDisconnect().remove(),config.onopen&&setTimeout(config.onopen,1),socket},window.Firebase)callback();else{var script=document.createElement("script");script.src="https://cdn.webrtc-experiment.com/firebase.js",script.onload=callback,document.documentElement.appendChild(script)}}function init(){self.config||(self.config={ondatachannel:function(room){if(!dataConnector)return void(self.room=room);var tempRoom={id:room.roomToken,owner:room.broadcaster};return self.ondatachannel?self.ondatachannel(tempRoom):void(self.joinedARoom||(self.joinedARoom=!0,self.join(tempRoom)))},onopen:function(userid,_channel){self.onopen(userid,_channel),self.channels[userid]={channel:_channel,send:function(data){self.send(data,this.channel)}}},onmessage:function(data,userid){if(IsDataChannelSupported&&!data.size&&(data=JSON.parse(data)),!IsDataChannelSupported){if(data.userid===window.userid)return;data=data.message}"text"===data.type?textReceiver.receive(data,self.onmessage,userid):"undefined"!=typeof data.maxChunks?fileReceiver.receive(data,self):self.onmessage(data,userid)},onclose:function(event){var myChannels=self.channels,closedChannel=event.currentTarget;for(var userid in myChannels)closedChannel===myChannels[userid].channel&&delete myChannels[userid];self.onclose(event)},openSignalingChannel:self.openSignalingChannel},dataConnector=IsDataChannelSupported?new DataConnector(self,self.config):new SocketConnector(self.channel,self.config),fileReceiver=new FileReceiver(self),textReceiver=new TextReceiver(self),self.room&&self.config.ondatachannel(self.room))}channel&&(this.automatic=!0),this.channel=channel||location.href.replace(/\/|:|#|%|\.|\[|\]/g,""),extras=extras||{};var dataConnector,fileReceiver,textReceiver,self=this;this.onmessage=function(message,userid){console.debug(userid,"sent message:",message)},this.channels={},this.onopen=function(userid){console.debug(userid,"is connected with you.")},this.onclose=function(event){console.error("data channel closed:",event)},this.onerror=function(event){console.error("data channel error:",event)},this.autoSaveToDisk=!0,this.onFileReceived=function(fileName){console.debug("File <",fileName,"> received successfully.")},this.onFileSent=function(file){console.debug("File <",file.name,"> sent successfully.")},this.onFileProgress=function(packets){console.debug("<",packets.remaining,"> items remaining.")},this.open=function(_channel){self.joinedARoom=!0,self.socket?self.socket.onDisconnect().remove():self.isInitiator=!0,_channel&&(self.channel=_channel),prepareInit(function(){init(),IsDataChannelSupported&&dataConnector.createRoom(_channel)})},this.connect=function(_channel){_channel&&(self.channel=_channel),prepareInit(init)},this.join=function(room){if(!room.id||!room.owner)throw"Invalid room info passed.";dataConnector||init(),dataConnector.joinRoom&&dataConnector.joinRoom({roomToken:room.id,joinUser:room.owner})},this.send=function(data,_channel){if(!data)throw"No file, data or text message to share.";return"undefined"!=typeof data.size&&"undefined"!=typeof data.type?void FileSender.send({file:data,channel:dataConnector,onFileSent:function(file){self.onFileSent(file)},onFileProgress:function(packets,uuid){self.onFileProgress(packets,uuid)},_channel:_channel,root:self}):void TextSender.send({text:data,channel:dataConnector,_channel:_channel,root:self})},this.onleave=function(userid){console.debug(userid,"left!")},this.leave=this.eject=function(userid){dataConnector.leave(userid,self.autoCloseEntireSession)},this.openNewSession=function(isOpenNewSession,isNonFirebaseClient){if(isOpenNewSession){if(self.isNewSessionOpened)return;self.isNewSessionOpened=!0,self.joinedARoom||self.open()}(!isOpenNewSession||isNonFirebaseClient)&&self.connect(),isNonFirebaseClient&&setTimeout(function(){self.openNewSession(!0)},5e3)},"undefined"==typeof this.preferSCTP&&(this.preferSCTP=isFirefox||chromeVersion>=32?!0:!1),"undefined"==typeof this.chunkSize&&(this.chunkSize=isFirefox||chromeVersion>=32?13e3:1e3),"undefined"==typeof this.chunkInterval&&(this.chunkInterval=isFirefox||chromeVersion>=32?100:500),self.automatic&&(window.Firebase?(console.debug("checking presence of the room.."),new window.Firebase("https://"+(extras.firebase||self.firebase||"webrtc-experiment")+".firebaseIO.com/"+self.channel).once("value",function(data){console.debug("room is present?",null!==data.val()),self.openNewSession(null===data.val())})):self.openNewSession(!1,!0))};var moz=!!navigator.mozGetUserMedia,IsDataChannelSupported=!(moz&&!navigator.mozGetUserMedia||!moz&&!navigator.webkitGetUserMedia),userid=getRandomString(),isMobileDevice=navigator.userAgent.match(/Android|iPhone|iPad|iPod|BlackBerry|IEMobile/i),isChrome=!!navigator.webkitGetUserMedia,isFirefox=!!navigator.mozGetUserMedia,chromeVersion=50;isChrome&&(chromeVersion=navigator.mozGetUserMedia?0:parseInt(navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./)[2]));var loadedIceFrame;loadIceFrame(function(iceServers){window.iceServers=iceServers});var FileConverter={DataURLToBlob:function(dataURL,fileType,callback){function processInWebWorker(){var blob=URL.createObjectURL(new Blob(['function getBlob(_dataURL, _fileType) {var binary = atob(_dataURL.substr(_dataURL.indexOf(",") + 1)),i = binary.length,view = new Uint8Array(i);while (i--) {view[i] = binary.charCodeAt(i);};postMessage(new Blob([view], {type: _fileType}));};this.onmessage =  function (e) {var data = JSON.parse(e.data); getBlob(data.dataURL, data.fileType);}'],{type:"application/javascript"})),worker=new Worker(blob);return URL.revokeObjectURL(blob),worker}if(window.Worker&&!isMobileDevice){var webWorker=processInWebWorker();webWorker.onmessage=function(event){callback(event.data)},webWorker.postMessage(JSON.stringify({dataURL:dataURL,fileType:fileType}))}else{for(var binary=atob(dataURL.substr(dataURL.indexOf(",")+1)),i=binary.length,view=new Uint8Array(i);i--;)view[i]=binary.charCodeAt(i);callback(new Blob([view]))}}},FileSaver={SaveToDisk:function(fileUrl,fileName){var hyperlink=document.createElement("a");hyperlink.href=fileUrl,hyperlink.target="_blank",hyperlink.download=fileName||fileUrl;var mouseEvent=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0});hyperlink.dispatchEvent(mouseEvent),(window.URL||window.webkitURL).revokeObjectURL(hyperlink.href)}},FileSender={send:function(config){function processInWebWorker(){var blob=URL.createObjectURL(new Blob(["function readFile(_file) {postMessage(new FileReaderSync().readAsDataURL(_file));};this.onmessage =  function (e) {readFile(e.data);}"],{type:"application/javascript"})),worker=new Worker(blob);return URL.revokeObjectURL(blob),worker}function onReadAsDataURL(dataURL,text){var data={type:"file",uuid:file.uuid,maxChunks:numberOfPackets,currentPosition:numberOfPackets-packets,name:file.name,fileType:file.type,size:file.size};dataURL&&(text=dataURL,numberOfPackets=packets=data.packets=parseInt(text.length/packetSize),file.maxChunks=data.maxChunks=numberOfPackets,data.currentPosition=numberOfPackets-packets,root.onFileSent&&root.onFileSent(file)),root.onFileProgress&&root.onFileProgress({remaining:packets--,length:numberOfPackets,sent:numberOfPackets-packets,maxChunks:numberOfPackets,uuid:file.uuid,currentPosition:numberOfPackets-packets},file.uuid),text.length>packetSize?data.message=text.slice(0,packetSize):(data.message=text,data.last=!0,data.name=file.name,file.url=URL.createObjectURL(file),root.onFileSent(file,file.uuid)),channel.send(data,privateChannel),textToTransfer=text.slice(data.message.length),textToTransfer.length&&setTimeout(function(){onReadAsDataURL(null,textToTransfer)},root.chunkInterval||100)}var root=config.root,channel=config.channel,privateChannel=config._channel,file=config.file;if(!config.file)return void console.error("You must attach/select a file.");var packetSize=15e3;root.chunkSize&&(packetSize=root.chunkSize);var textToTransfer="",numberOfPackets=0,packets=0;if(file.uuid=getRandomString(),window.Worker&&!isMobileDevice){var webWorker=processInWebWorker();webWorker.onmessage=function(event){onReadAsDataURL(event.data)},webWorker.postMessage(file)}else{var reader=new FileReader;reader.onload=function(e){onReadAsDataURL(e.target.result)},reader.readAsDataURL(file)}}},TextSender={send:function(config){function sendText(textMessage,text){var data={type:"text",uuid:uuid,sendingTime:sendingTime};textMessage&&(text=textMessage,data.packets=parseInt(text.length/packetSize)),text.length>packetSize?data.message=text.slice(0,packetSize):(data.message=text,data.last=!0,data.isobject=isobject),channel.send(data,_channel),textToTransfer=text.slice(data.message.length),textToTransfer.length&&setTimeout(function(){sendText(null,textToTransfer)},root.chunkInterval||100)}var root=config.root,channel=config.channel,_channel=config._channel,initialText=config.text,packetSize=root.chunkSize||1e3,textToTransfer="",isobject=!1;"string"!=typeof initialText&&(isobject=!0,initialText=JSON.stringify(initialText));var uuid=getRandomString(),sendingTime=(new Date).getTime();sendText(initialText)}}}();